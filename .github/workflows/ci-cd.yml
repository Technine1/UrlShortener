name: CI/CD Pipeline for UrlShortener

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Шаг 3: Сборка с Maven
      - name: Build with Maven
        run: mvn clean compile

      # Шаг 4: Запуск тестов
      - name: Run tests
        run: mvn test

  build-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Логин в DockerHub
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Шаг 3: Сборка и пуш Docker-образа
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/urlshortener:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/urlshortener:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/urlshortener:latest

  deploy-to-kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.32.0'

      # Шаг 3: Настройка kubeconfig
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      # Шаг 4: Деплой в Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/urlshortener-deployment.yml
          kubectl apply -f k8s/urlshortener-service.yml

  deploy-to-server:
    name: Deploy to Remote Server
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Деплой через SSH
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} user@your-server-ip << 'EOF'
          cd /path/to/your/project
          git pull origin master
          mvn clean package
          java -jar target/UrlShortener-1.0-SNAPSHOT.jar &
          EOF